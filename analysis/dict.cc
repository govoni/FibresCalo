//
// File generated by rootcint at Tue Apr 22 14:45:33 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void maplEintcOvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOvectorlEfloatgRsPgR_Dictionary();
   static void *new_maplEintcOvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_maplEintcOvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOvectorlEfloatgRsPgR(void *p);
   static void deleteArray_maplEintcOvectorlEfloatgRsPgR(void *p);
   static void destruct_maplEintcOvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,vector<float> >*)
   {
      map<int,vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,vector<float> >", -2, "prec_stl/map", 63,
                  typeid(map<int,vector<float> >), DefineBehavior(ptr, ptr),
                  0, &maplEintcOvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,vector<float> >) );
      instance.SetNew(&new_maplEintcOvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<float> > : new map<int,vector<float> >;
   }
   static void *newArray_maplEintcOvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<float> >[nElements] : new map<int,vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOvectorlEfloatgRsPgR(void *p) {
      delete ((map<int,vector<float> >*)p);
   }
   static void deleteArray_maplEintcOvectorlEfloatgRsPgR(void *p) {
      delete [] ((map<int,vector<float> >*)p);
   }
   static void destruct_maplEintcOvectorlEfloatgRsPgR(void *p) {
      typedef map<int,vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,vector<float> >

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledict();

extern "C" void G__set_cpp_environmentdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtabledict();
}
#include <new>
extern "C" int G__cpp_dllrevdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > */
static int G__dict_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >[n];
     } else {
       p = new((void*) gvp) map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >;
     } else {
       p = new((void*) gvp) map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >(*(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >& obj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator=(*(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->begin();
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->end();
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->rend();
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator[](*(int*) G__Intref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator,bool>* pobj;
         pair<map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator,bool> xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->swap(*(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->find(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->count(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->lower_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__dict_405_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator* pobj;
         map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator xobj = ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) G__getstructoffset())->upper_bound(*(int*) G__Intref(&libp->para[0]));
         pobj = new map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > G__TmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR;
static int G__dict_405_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) (soff+(sizeof(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >)*i)))->~G__TmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*) (soff))->~G__TmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdict {
 public:
  G__Sizep2memfuncdict(): p(&G__Sizep2memfuncdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdict::*p)();
};

size_t G__get_sizep2memfuncdict()
{
  G__Sizep2memfuncdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledict() {

   /* Setting up typedef entry */
   G__search_typename2("value_type",102,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",70,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",70,-1,256,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",102,-1,1,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",102,-1,257,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<float> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",105,-1,0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__dictLN_pairlEintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__dictLN_lesslEintgR),0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__dictLN_allocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<float,allocator<float> >,less<int> >",117,G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > */
static void G__setup_memvarmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   { map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > *p; p=(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   /* map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >",10498,G__dict_405_0_1, 105, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >",10498,G__dict_405_0_2, 105, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >",10498,G__dict_405_0_3, 105, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >",10498,G__dict_405_0_4, 105, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__dict_405_0_5, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__dict_405_0_6, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__dict_405_0_7, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__dict_405_0_8, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__dict_405_0_9, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__dict_405_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__dict_405_0_11, 107, -1, G__defined_typename("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__dict_405_0_12, 107, -1, G__defined_typename("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__dict_405_0_13, 117, G__get_linked_tagnum(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_405_0_14, 117, G__get_linked_tagnum(&G__dictLN_pairlEmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<int,vector<float,allocator<float> > >' 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_405_0_15, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - position u 'pair<int,vector<float,allocator<float> > >' 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_405_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__dict_405_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_405_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_405_0_19, 107, -1, G__defined_typename("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__dict_405_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__dict_405_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__dict_405_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__dict_405_0_23, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__dict_405_0_24, 107, -1, G__defined_typename("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 8, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__dict_405_0_25, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__dict_405_0_26, 117, G__get_linked_tagnum(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >", 10624, G__dict_405_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator = { "vector<float,allocator<float> >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<float,allocator<float> >::iterator>" , 99 , -1 };
G__linked_taginfo G__dictLN_lesslEintgR = { "less<int>" , 115 , -1 };
G__linked_taginfo G__dictLN_allocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "allocator<pair<const int,vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR = { "map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR = { "pair<int,vector<float,allocator<float> > >" , 115 , -1 };
G__linked_taginfo G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__dictLN_pairlEmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator,bool>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledict() {
  G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__dictLN_lesslEintgR.tagnum = -1 ;
  G__dictLN_allocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_pairlEintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR.tagnum = -1 ;
  G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__dictLN_pairlEmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledict() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1,36608,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__dictLN_vectorlEfloatcOallocatorlEfloatgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_reverse_iteratorlEvectorlEfloatcOallocatorlEfloatgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__dictLN_lesslEintgR);
   G__get_linked_tagnum_fwd(&G__dictLN_allocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),sizeof(map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >),-1,36608,(char*)NULL,G__setup_memvarmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__dictLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__dictLN_pairlEmaplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
}
extern "C" void G__cpp_setupdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdict()");
  G__set_cpp_environmentdict();
  G__cpp_setup_tagtabledict();

  G__cpp_setup_inheritancedict();

  G__cpp_setup_typetabledict();

  G__cpp_setup_memvardict();

  G__cpp_setup_memfuncdict();
  G__cpp_setup_globaldict();
  G__cpp_setup_funcdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdict();
  return;
}
class G__cpp_setup_initdict {
  public:
    G__cpp_setup_initdict() { G__add_setup_func("dict",(G__incsetup)(&G__cpp_setupdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdict() { G__remove_setup_func("dict"); }
};
G__cpp_setup_initdict G__cpp_setup_initializerdict;

